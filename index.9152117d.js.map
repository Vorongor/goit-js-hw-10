{"mappings":"YAAA,IAAMA,EAAS,wECEfC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAcF,SAASG,cAAc,iBACrCC,EAASJ,SAASG,cAAc,WAChCE,EAAQL,SAASG,cAAc,UAC/BG,EAAUN,SAASG,cAAc,aAQJ,SAA1BI,IACPH,EAAOI,MAAMC,QAAU,M,CAImB,SAAnCC,IACPL,EAAMG,MAAMC,QAAU,O,CDfjBE,MAFK,sCAEM,CAChBC,QAAS,CACP,YAAYb,KAGbc,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,G,OAAQA,EAAKC,KAAI,SAAAC,G,MAAU,CAAEC,GAAID,EAAMC,GAAIC,KAAMF,EAAME,K,OAC5DC,OAAM,SAAAC,GAEyB,MAD9BC,QAAQD,MAAM,sCAAqEA,GAC7EA,C,ICyCPT,MAAK,SAAAW,GAE8BA,EAA3BC,SAAQ,SAAAP,GACb,IAAMQ,EAAS1B,SAAS2B,cAAc,UACtCD,EAAOE,MAAQV,EAAMC,GACrBO,EAAOG,KAAOX,EAAME,KACpBlB,EAAY4B,YAAYJ,E,IAIMxB,EAApBD,iBAAiB,UAAU,WACrC,IDhDwB8B,EACxBC,EC+CMC,EAAkB/B,EAAY0B,MAhBxCtB,EAAQ4B,UAAY,IDhCQH,ECsDRE,EDrDhBD,EAAM,wDAAgEG,OAARJ,GAE7DpB,MAAMqB,EAAK,CAChBpB,QAAS,CACP,YAAab,KAGdc,MAAK,SAAAC,G,OAAYA,EAASC,M,IAC1BF,MAAK,SAAAG,GACJ,GAAIA,EAAKoB,OAAS,EAAG,CACnB,IAAMC,EAAMrB,EAAK,GACjB,MAAO,CACLsB,SAAUD,EAAIL,IACdO,UAAWF,EAAIb,OAAO,GAAGJ,KACzBoB,YAAaH,EAAIb,OAAO,GAAGgB,YAC3BC,YAAaJ,EAAIb,OAAO,GAAGiB,Y,CAG7B,MAAM,IAAIC,MAAM,oC,IAGnBrB,OAAM,SAAAC,GAEL,MADAC,QAAQD,MAAM,6CAA8CA,GACtDA,C,KC+BDT,MAAK,SAAAwB,IA5CyB,SAAlBA,GACnB,IAAMM,EAAQ3C,SAAS2B,cAAc,OACrCgB,EAAMC,IAAMP,EAAIL,IAChB1B,EAAQ4B,UAAY,GACpB5B,EAAQwB,YAAYa,GAEpB,IAAMJ,EAAYvC,SAAS2B,cAAc,KACzCY,EAAUM,YAAc,UAAoBV,OAAVE,EAAInB,OACtCZ,EAAQwB,YAAYS,GAEpB,IAAMC,EAAcxC,SAAS2B,cAAc,KAC3Ca,EAAYK,YAAc,gBAAgCV,OAAhBE,EAAIG,aAC9ClC,EAAQwB,YAAYU,GAEpB,IAAMC,EAAczC,SAAS2B,cAAc,KAC3Cc,EAAYI,YAAc,gBAAgCV,OAAhBE,EAAII,aAC9CnC,EAAQwB,YAAYW,E,CA8BiBK,CAAjBT,E,IAEbhB,OAAM,SAAAC,GAE6BZ,IAClCa,QAAQD,MAAM,6CAAkFA,E,IAEjGyB,SAAQ,WAEkBxC,G,UAIhCc,OAAM,SAAAC,GAE6BZ,IAClCa,QAAQD,MAAM,sCAAqEA,E,IAEpFyB,SAAQ,WAEPxC,G","sources":["src/js/cat-colection.js","src/js/index.js"],"sourcesContent":["const apiKey = 'live_NyTYIQ18qj6XnjGvUJMYHkddncj2ZTSRGxOgSOxcOOjMhiRf9nXjm7XsYf9nFFhe';\n\nexport function fetchBreeds() {\n  const url = 'https://api.thecatapi.com/v1/breeds';\n\n  return fetch(url, {\n    headers: {\n      'x-api-key':apiKey,\n    }\n  })\n    .then(response => response.json())\n    .then(data => data.map(breed => ({ id: breed.id, name: breed.name })))\n    .catch(error => {\n      console.error('Помилка при отриманні списку порід:', error);\n      throw error;\n    });\n}\n\nexport function fetchCatByBreed(breedId) {\n  const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`;\n\n  return fetch(url, {\n    headers: {\n      'x-api-key': apiKey\n    }\n  })\n    .then(response => response.json())\n    .then(data => {\n      if (data.length > 0) {\n        const cat = data[0];\n        return {\n          imageUrl: cat.url,\n          breedName: cat.breeds[0].name,\n          description: cat.breeds[0].description,\n          temperament: cat.breeds[0].temperament\n        };\n      } else {\n        throw new Error('Кота з такою породою не знайдено.');\n      }\n    })\n    .catch(error => {\n      console.error('Помилка при отриманні інформації про кота:', error);\n      throw error;\n    });\n}\n","import { fetchBreeds, fetchCatByBreed } from \"./cat-colection.js\"\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const breedSelect = document.querySelector('.breed-select');\n  const loader = document.querySelector('.loader');\n  const error = document.querySelector('.error');\n  const catInfo = document.querySelector('.cat-info');\n\n  // Функція для відображення завантажувача\n  function showLoader() {\n    loader.style.display = 'block';\n  }\n\n  // Функція для приховування завантажувача\n  function hideLoader() {\n    loader.style.display = 'none';\n  }\n\n  // Функція для відображення повідомлення про помилку\n  function showError() {\n    error.style.display = 'block';\n  }\n\n  // Функція для приховування повідомлення про помилку\n  function hideError() {\n    error.style.display = 'none';\n  }\n\n  // Функція для відображення інформації про кота\n  function showCatInfo(cat) {\n    const image = document.createElement('img');\n    image.src = cat.url;\n    catInfo.innerHTML = '';\n    catInfo.appendChild(image);\n\n    const breedName = document.createElement('p');\n    breedName.textContent = `Breed: ${cat.breed}`;\n    catInfo.appendChild(breedName);\n\n    const description = document.createElement('p');\n    description.textContent = `Description: ${cat.description}`;\n    catInfo.appendChild(description);\n\n    const temperament = document.createElement('p');\n    temperament.textContent = `Temperament: ${cat.temperament}`;\n    catInfo.appendChild(temperament);\n  }\n\n  // Функція для очищення інформації про кота\n  function clearCatInfo() {\n    catInfo.innerHTML = '';\n  }\n\n  // Отримання списку порід котів при завантаженні сторінки\n  fetchBreeds()\n    .then(breeds => {\n      // Наповнення селекту опціями порід котів\n      breeds.forEach(breed => {\n        const option = document.createElement('option');\n        option.value = breed.id;\n        option.text = breed.name;\n        breedSelect.appendChild(option);\n      });\n\n      // Обробник події при виборі породи кота\n      breedSelect.addEventListener('change', () => {\n        const selectedBreedId = breedSelect.value;\n\n        // Очищення інформації про кота\n        clearCatInfo();\n\n        // Виклик функції для отримання інформації про кота за обраною породою\n        fetchCatByBreed(selectedBreedId)\n          .then(cat => {\n            // Відображення інформації про кота\n            showCatInfo(cat);\n          })\n          .catch(error => {\n            // Відображення повідомлення про помилку\n            showError();\n            console.error('Помилка при отриманні інформації про кота:', error);\n          })\n          .finally(() => {\n            // Приховування завантажувача\n            hideLoader();\n          });\n      });\n    })\n    .catch(error => {\n      // Відображення повідомлення про помилку\n      showError();\n      console.error('Помилка при отриманні списку порід:', error);\n    })\n    .finally(() => {\n      // Приховування завантажувача\n      hideLoader();\n    });\n});\n"],"names":["$f88ac8dc2365aea6$var$apiKey","document","addEventListener","breedSelect","querySelector","loader","error1","catInfo","hideLoader","style","display","showError","fetch","headers","then","response","json","data","map","breed","id","name","catch","error","console","breeds","forEach","option","createElement","value","text","appendChild","breedId","url","selectedBreedId","innerHTML","concat","length","cat","imageUrl","breedName","description","temperament","Error","image","src","textContent","showCatInfo","finally"],"version":3,"file":"index.9152117d.js.map"}